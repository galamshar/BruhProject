# Generated by Django 3.1.8 on 2021-05-14 02:48

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Wallet name')),
                ('description', models.TextField(blank=True, verbose_name='Wallet description')),
                ('money', models.FloatField(verbose_name='Balance')),
                ('active', models.BooleanField(default=True, verbose_name='Wallet is active')),
                ('creation_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='Creation time')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Wallet owner')),
            ],
        ),
        migrations.CreateModel(
            name='Friendship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acceptance', models.BooleanField(verbose_name='Acceptance of familiarity')),
                ('friend', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friend', to=settings.AUTH_USER_MODEL, verbose_name='Friend')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='person', to=settings.AUTH_USER_MODEL, verbose_name='Person')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(verbose_name='Event start time')),
                ('end_time', models.DateTimeField(verbose_name='Event end time')),
                ('creation_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='Event creation time')),
                ('name', models.CharField(max_length=100, verbose_name='Event name')),
                ('description', models.TextField(blank=True, verbose_name='Description of the event')),
                ('home_name', models.CharField(max_length=50, verbose_name='First team\'s name')),
                ('away_name', models.CharField(max_length=50, verbose_name='Second team\'s name')),
                ('home_odd', models.FloatField(default=1.0, validators=[django.core.validators.MinValueValidator(1.0, 'The minimum Odd is 1.0.')], verbose_name='Odd for the first team')),
                ('draw_odd', models.FloatField(default=1.0, validators=[django.core.validators.MinValueValidator(1.0, 'The minimum Odd is 1.0.')], verbose_name='Odds for a draw')),
                ('away_odd', models.FloatField(default=1.0, validators=[django.core.validators.MinValueValidator(1.0, 'The minimum Odd is 1.0.')], verbose_name='Odds for the second team')),
                ('open', models.BooleanField(default=True, verbose_name='Event not included')),
                ('result', models.IntegerField(blank=True, choices=[(0, 'X'), (1, '1'), (2, '2')], null=True, verbose_name='Event result')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Author of the event')),
            ],
            options={
                'permissions': (('can_close', 'Can insert result and close event.'),),
            },
        ),
        migrations.CreateModel(
            name='Bet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chosen_result', models.IntegerField(choices=[(0, 'X'), (1, '1'), (2, '2')], verbose_name='Result')),
                ('value', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0, 'The value of the bet must not be negative!')], verbose_name='Bet\'s size')),
                ('odd', models.FloatField(verbose_name='Betting odds')),
                ('reward', models.FloatField(verbose_name='Possible win')),
                ('creation_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='Creation time')),
                ('open', models.BooleanField(default=True, verbose_name='Unsettled bet')),
                ('won', models.NullBooleanField(verbose_name='Unsettled bet')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.event', verbose_name='Event')),
                ('wallet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.wallet', verbose_name='Wallet')),
            ],
        ),
    ]
